@page "/calculadoras"
@inject NavigationManager navManager;

<PageTitle>Calculadoras e Algoritmos</PageTitle>

<h1>Calculadoras e Algoritmos</h1>
<p>Essa pagina contem todas as aplicações de formulas e algoritmos implementados nesse site.</p>

<input class="input-text" type="text" @bind="searchTerm" placeholder="Busque calculadoras e algoritmos..." />

@{
	sortedRedirects = ApplySearchFilter(redirects, searchTerm);

	sortedRedirects.Sort((x, y) => x.Title.CompareTo(y.Title));
}

@if (sortedRedirects.Count == 0)
{
	<p>Nenhuma calculadora ou algoritmo encontrado</p>
}
else
{
	<p>Encontrados @sortedRedirects.Count calculadoras/algoritmos.</p>
	@foreach (var redirect in sortedRedirects)
	{
		<RedirectPanel Destination="@redirect.Destination">
			<h2>@redirect.Title</h2>
			<p>@redirect.Description</p>
		</RedirectPanel>
	}
}

@code {

	private List<Redirect> redirects = new();
	private List<Redirect> sortedRedirects = new();

	protected override void OnInitialized()
	{
		redirects = new List<Redirect>
		{
		new("solvers/Estatistica", "Estatisica", "Calcule a média, mediana, modo, variança e desvio padrão (amostral e populacional) e média geométrica"),
		new("solvers/Vetores", "Vetores", "Calcule a soma, subtração, produto escalar e vetorial e angulo entre dois vetores, alem do módulo de um vetor"),
		new("solvers/Matriz", "Matrizes", "Calcule e faça operações em matrizes como inversa, Decomposição LU, determinante, transposta, forma escada e posto."),
		};
		base.OnInitialized();
	}

	class Redirect
	{
		public string Destination { get; set; }
		public string Title { get; set; }
		public string Description { get; set; }

		public Redirect(string destination, string title, string description)
		{
			Destination = destination;
			Title = title;
			Description = description;
		}
	}

	string searchTerm = "";

	List<Redirect> ApplySearchFilter(List<Redirect> redirects, string searchTerm)
	{
		if (!string.IsNullOrEmpty(searchTerm))
		{
			searchTerm = searchTerm.ToLower();
			redirects = redirects.Where(r =>
				r.Title.ToLower().Contains(searchTerm) ||
				r.Description.ToLower().Contains(searchTerm))
				.ToList();
		}
		return redirects;
	}
}
