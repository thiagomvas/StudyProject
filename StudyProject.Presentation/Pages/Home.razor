@page "/"
@using MathJaxBlazor
@using StudyProject.Application.Articles.Commands
@using StudyProject.Application.Articles.Commands.Create
@using StudyProject.Application.Articles.Commands.Get
@using StudyProject.Application.Common.Builders
@using StudyProject.Core.ArticleAggregate
@inject ArticleCommandInvoker invoker;

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

<button class="btn btn-primary" @onclick="IncrementCount">Create Article</button>
<InputText @bind-Value="SearchId" />
<button class="btn btn-primary" @onclick="GetArticle">Search Article</button>

@if(article == null)
{
	<p><em>Loading...</em></p>
}
else
{
    // NOTE : This is a hack to get the equations to render. Blazor does not render the component if its from a MarkupString
	<h1>@article.Title (@article.Id)</h1>
    @((MarkupString)article.Content)
    foreach(var eq in equations)
    {
        <Equation Value="@eq" />
    }
}

<p>This is another test: <Equation Value="\pi \cdot r^2" TeXDisplay="false"/> is the area of a circle</p>

@code {

    private string SearchId;
    private Article? article;

    string[] equations = ["a^2 + b^2 = c^2", """\frac{d}{dx} f(x)"""];

    private async void IncrementCount()
    {
        var text = 
    """"
<h2> Hi ! </h2>
<p> This is a test </p>
<p>This is another test: <MathJaxBlazor.Equation Value="l^2" TeXDisplay="false"/> is the area of a square</p>
"""";
        Article a = new ArticleBuilder().WithTitle("Bar").WithContent(text).Build();
        article = a;
        await invoker.CreateArticleAsync(new CreateArticleCommand(a));
    }

    private async void GetArticle()
    {
        article = await invoker.GetArticleAsync(new GetArticleCommand(SearchId));
    }

}