@page "/solvers/Statistics"
@using TMath
@using TMath.Numerics
@using TMath.Numerics.Models
@using MathJaxBlazor

<PageTitle>Statistics Calculator</PageTitle>

<h3>Statistics</h3>
Calculate <b>Mean</b>, <b>Median</b>, <b>Mode</b>,  <b>Standard Deviation</b> and <b>Variance</b> from a data set.

<br />

<div>
	@if (showFormulas)
	{
		<CustomButton OnClick="() => showFormulas = !showFormulas">Hide Formulas</CustomButton>
		<table>
			<thead>
				<tr>
					<th>Name</th>
					<th>Formula</th>
					<th>Info</th>
					<!-- Add more header cells if needed -->
				</tr>
			</thead>
			<tbody>
				<tr>
					<td>Mean</td>
					<td><Equation Value=" \overline{x} = \frac{1}{n} \sum_{i=i}^{n} x_{i} " /></td>
					<td></td>
				</tr>
				<tr>
					<td>Median</td>
					<td><Equation Value=" med(X) = \left \{\begin{align*}  &X\left [ \frac{n+1}{2}\right] &\text{if n is odd} \\ &\frac{X[\frac{n}{2}] + X[\frac{n}{2} + 1]}{2} &\text{if n is even}\\ \end{align*} \right." /></td>
					<td><Equation Value="X =" TeXDisplay="false" /> ordered list of values in data set <br /> <Equation Value="n =" TeXDisplay="false" /> number of values in data set </td>
				</tr>
				<tr>
					<td>Mode</td>
					<td>There is no formula</td>
					<td>Most frequent value in data set</td>
				</tr>
				<tr>
					<td>Sample Variance</td>
					<td><Equation Value="\sigma^2 = \frac{\sum (x_i - \overline{x})^2}{n - 1} " /></td>
					<td><Equation Value="x_i =" TeXDisplay="false" /> value in data set <br /> <Equation Value="\overline{x} =" TeXDisplay="false" /> mean of data set <br /> <Equation Value="n =" TeXDisplay="false" /> number of values in data set </td>
				</tr>
				<tr>
					<td>Sample Standard Deviation</td>
					<td><Equation Value="\sigma = \sqrt{\frac{\sum (x_i - \overline{x})^2}{n - 1}}" /></td>
					<td><Equation Value="x_i =" TeXDisplay="false" /> value in data set <br /> <Equation Value="\overline{x} =" TeXDisplay="false" /> mean of data set <br /> <Equation Value="n =" TeXDisplay="false" /> number of values in data set </td>
				</tr>
				<tr>
					<td>Geometric Mean</td>
					<td><Equation Value="\overline{x}_{geom} = \left(\prod_{i=1}^{n} x_{i}\right)^{\frac{1}{n}} = \sqrt[n]{x_1 \cdot x_2 \cdot \cdots \cdot x_n}" /></td>
					<td><Equation Value="x_i =" TeXDisplay="false" /> value in data set <br /> <Equation Value="n =" TeXDisplay="false" /> number of values in data set </td>
				</tr>
				<tr>
					<td>Population Variance</td>
					<td><Equation Value="\sigma^2 = \frac{\sum (x_i - \overline{x})^2}{n} " /></td>
					<td><Equation Value="x_i =" TeXDisplay="false" /> value in data set <br /> <Equation Value="\overline{x} =" TeXDisplay="false" /> mean of data set <br /> <Equation Value="n =" TeXDisplay="false" /> number of values in data set </td>
				</tr>
				<tr>
					<td>Population Standard Deviation</td>
					<td><Equation Value="\sigma = \sqrt{\frac{\sum (x_i - \overline{x})^2}{n}}" /></td>
					<td><Equation Value="x_i =" TeXDisplay="false" /> value in data set <br /> <Equation Value="\overline{x} =" TeXDisplay="false" /> mean of data set <br /> <Equation Value="n =" TeXDisplay="false" /> number of values in data set </td>
				</tr>
			</tbody>
		</table>
	}
	else
	{
		<CustomButton OnClick="() => showFormulas = !showFormulas">Show Formulas</CustomButton>
	}
</div>


<br />
<div>
	<InputText style="width=75%" @bind-Value="input" placeholder="Enter your dataset" />
</div>
<br />
<CustomButton OnClick="CalculateData">Compute values</CustomButton>
<Divider />
<br />
@if (stats == null)
{
	<p>Enter your data set separated by a ,</p>
	<p>Example: 1, 2, 3, 4, 5 (space not required)</p>
}
else
{
	<table>
		<thead>
		</thead>
		<tbody>
			<tr>
				<td>Mean</td>
				<td>@stats.Mean</td>
			</tr>
			<tr>
				<td>Median</td>
				<td>@stats.Median</td>
			</tr>
			<tr>
				<td>Range</td>
				<td>@stats.Range</td>
			</tr>
			<tr>
				<td>Mode</td>
				<td>@stats.Mode</td>
			</tr>
			<tr>
				<td>Sum</td>
				<td>@stats.Sum</td>
			</tr>
			<tr>
				<td>Sample Variance</td>
				<td>@stats.SampleVariance</td>
			</tr>
			<tr>
				<td>Sample Standard Deviation</td>
				<td>@stats.SampleStandardDeviation</td>
			</tr>
			<tr>
				<td>Largest</td>
				<td>@stats.Largest</td>
			</tr>
			<tr>
				<td>Smallest</td>
				<td>@stats.Smallest</td>
			</tr>
			<tr>
				<td>Population Variance</td>
				<td>@stats.Variance</td>
			</tr>
			<tr>
				<td>Population Standard Deviation</td>
				<td>@stats.StandardDeviation</td>
			</tr>
			<tr>
				<td>Geometric Mean</td>
				<td>@stats.GeometricMean</td>
			</tr>
		</tbody>
	</table>

	<Divider />
}

@code {
	private bool showFormulas = false;
	private string input;
	DescriptiveStatistics<double> stats = null;
	private void CalculateData()
	{
		if (string.IsNullOrWhiteSpace(input))
		{
			return;
		}
		var data = ProcessInput();
		stats = new(data);
	}

	private double[] ProcessInput()
	{
		return input.Replace(" ", "").Split(',').Select(x => double.Parse(x)).ToArray();
	}
}
