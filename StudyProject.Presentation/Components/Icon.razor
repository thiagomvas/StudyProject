@code {
        [Parameter] public string IconName { get; set; }

    private Dictionary<string, string> Icons = new Dictionary<string, string>
    {
        { "hashtag", @"<svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" stroke=""{color}"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round""><line x1=""4"" y1=""9"" x2=""20"" y2=""9""></line><line x1=""4"" y1=""15"" x2=""20"" y2=""15""></line><line x1=""10"" y1=""3"" x2=""8"" y2=""21""></line><line x1=""16"" y1=""3"" x2=""14"" y2=""21""></line></svg>" },
        { "note", """"<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="{color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M13 2H6a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V9l-7-7z"/><path d="M13 3v6h6"/></svg>"""" },
        { "search", """"<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="{color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>""""},
        { "list", """"<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="{color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line></svg>"""" },
    };
}

<div style="padding: 0 5px 0 0">
    @((MarkupString) (Icons.ContainsKey(IconName) ? Icons[IconName].Replace("{color}", Theme.Default.TextColor) : "Icon not found"))
</div>