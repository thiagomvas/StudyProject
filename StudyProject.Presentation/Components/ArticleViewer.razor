@using MathJaxBlazor
@using StudyProject.Core.ArticleAggregate
@using System.Text.RegularExpressions


<h1>@Article.Title</h1>

<Row>
	@foreach ((string tag, int index) in Article.SubjectIds.Select((tag, index) => (tag, index)))
	{
	<Chip Color="@GetGradientColor()">@tag</Chip>


	}
</Row>

<br />


@foreach (Match match in Regex.Matches(Article.Content, @"(\$\$.*?\$\$|\$[^$]*\$)|([^$]+)"))
{
	string text = match.Value;
	if (text.Contains("$$"))
	{
		<Equation Value="@text.Replace("$$", "")" />
	}
	else if (text.Contains('$'))
	{
		<Equation Value="@text.Replace('$', ' ')" TeXDisplay=false />
	}
	else
	{
		@((MarkupString)text.Replace("\n", "<br/>"))
		;
	}
}

@code {
	[Parameter] public Article Article { get; set; }
	protected override void OnInitialized()
	{
		Console.WriteLine($"Title: {Article.Title}");
		Console.WriteLine($"Subject Ids: {string.Join(",", Article.SubjectIds)}");
		base.OnInitialized();
	}

	private int index;
	private string GetGradientColor()
	{
		int hue = 15 + index * 10; // Adjusted for warmer colors
		int saturation = 80; // Adjust saturation as needed
		int lightness = 60; // Adjust lightness as needed
		return $"hsl({hue}, {saturation}%, {lightness}%)";
	}
}
